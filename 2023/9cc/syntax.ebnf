program = fndef*;

fndef = arithtype ident "(" params? ")" "{" stmt* "}";

params = arithtype ident
       | arithtype ident "," params
       ;

stmt = expr ";"
     | "if" "(" expr ")" stmt ("else" stmt)?
     | "return" expr ";"
     | "{" (stmt | declaration)* "}"
     ;

declaration = arithtype declarator ";";

declarators = ident
            | "*" declarator
            | declarator "[" num "]";;

expr = assign;

assign = equality ("=" assign)?;

equality = relational ("==" relational | "!=" relational)*;

relational = add ("<=" add | ">=" add | "<" add | ">" add)*;

add = mul ("+" mul | "-" mul)*;

mul = unary ("*" unary | "/" unary)*;

unary = postfix
      | ("+" | "-" | "&" | "*") unary
      | "sizeof" unary;

postfix = primary
        | postfix "[" expr "]";

primary = num
        | "\"" char* "\""
        | ident ( "("  ")" )?
        | "&" unary
        | "*" unary
        | "(" expr ")";

arithtype = "int" 
          | "char"
          ;
